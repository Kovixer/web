version: "3"
services:
  db:
    image: "mongo:4.4.2"
    container_name: "db"
    # ports:
    #   - "27017:27017"
    restart: unless-stopped
    env_file: .env
    environment:
      MONGO_INITDB_DATABASE: admin
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_LOGIN}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - "../data/db:/data/db"
      - "../data/logs:/data/logs"
    #   - "../mongod.conf:/etc/mongod.conf"
    # command: --config /etc/mongod.conf
    command: --logpath /data/logs/mongodb.log

  api:
    build:
      dockerfile: ../docker/api/Dockerfile
      context: ../api
      args:
        - CLIENT=${CLIENT}
        - SIDE_OPTIMIZED=${SIDE_OPTIMIZED}
        - MONGO_LOGIN=${MONGO_LOGIN}
        - MONGO_PASSWORD=${MONGO_PASSWORD}
        - GOOGLE_ID=${GOOGLE_ID}
        - GOOGLE_SECRET=${GOOGLE_SECRET}
        - TG_TOKEN=${TG_TOKEN}
        - SMSC_LOGIN=${SMSC_LOGIN}
        - SMSC_PASSWORD=${SMSC_PASSWORD}
        - VK_ID=${VK_ID}
        - VK_SECRET=${VK_SECRET}
    depends_on:
      - db
    container_name: "api"
    restart: unless-stopped
    env_file: .env
    volumes:
      - "../data/load:/data/load"
      - "../api/api:/api" # Для горячей перезагрузки
      - "../api/app.py:/app.py" # Для горячей перезагрузки

  web:
    build:
      dockerfile: ../docker/web/Dockerfile
      context: ../web
    container_name: "web"
    volumes:
      - "../web/public:/public"
      - "../web/src:/src"

  server:
    image: "nginx:1.19.6"
    container_name: "server"
    volumes:
      - "../docker/server/nginx.conf:/etc/nginx/nginx.conf"
      - "../data/load:/load"
      - "../data/logs:/data/logs"
    depends_on:
      - api
      - web
    ports:
      - '80:80'