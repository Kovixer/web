version: "3.9"
services:
  prometheus:
    image: prom/prometheus
    deploy:
      mode: global
    volumes:
      - type: bind
        source: ../docker/prometheus/prometheus.yml
        target: /prometheus.yml
    command:
      - --config.file=/prometheus.yml
      - --web.external-url=https://web.kosyachniy.com/prometheus/
      - --web.route-prefix=/

  grafana:
    image: grafana/grafana
    deploy:
      mode: global
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=pass
      - GF_SERVER_ROOT_URL=https://web.kosyachniy.com/grafana/
    depends_on:
      - prometheus

  cadvisor:
    image: google/cadvisor
    deploy:
      mode: global
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - api
      - prometheus
      - grafana

  node-exporter:
    image: prom/node-exporter
    restart: unless-stopped

  db:
    image: mongo:5.0.3
    # ports:
    #   - "27017:27017"
    restart: unless-stopped
    env_file: .env
    environment:
      MONGO_INITDB_DATABASE: admin
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_LOGIN}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - ../data/db:/data/db
      - ../data/logs:/data/logs
    #   - ../docker/db/mongod.conf:/etc/mongod.conf
    # command: --config /etc/mongod.conf

  api:
    image: web/api
    build:
      dockerfile: ../docker/api/Dockerfile
      context: ../api
      args:
        - PROTOCOL=${PROTOCOL}
        - HOST=${EXTERNAL_HOST}
        - MODE=${MODE}
        - SIDE_OPTIMIZED=${SIDE_OPTIMIZED}
        - LOCALE=${LOCALE}
        - TIMEZONE=${TIMEZONE}
        - MONGO_DB=${PROJECT_NAME}
        - MONGO_LOGIN=${MONGO_LOGIN}
        - MONGO_PASSWORD=${MONGO_PASSWORD}
        - YOOKASSA_ID=${YOOKASSA_ID}
        - YOOKASSA_KEY=${YOOKASSA_KEY}
        - GOOGLE_ID=${GOOGLE_ID}
        - GOOGLE_SECRET=${GOOGLE_SECRET}
        - TG_TOKEN=${TG_TOKEN}
        - BUG_CHAT=${BUG_CHAT}
        - SMSC_LOGIN=${SMSC_LOGIN}
        - SMSC_PASSWORD=${SMSC_PASSWORD}
        - VK_ID=${VK_ID}
        - VK_SECRET=${VK_SECRET}
        - SUBSCRIPTION_DAY=${SUBSCRIPTION_DAY}
        - SUBSCRIPTION_WEEK=${SUBSCRIPTION_WEEK}
        - SUBSCRIPTION_MONTH=${SUBSCRIPTION_MONTH}
        - SUBSCRIPTION_SEASON=${SUBSCRIPTION_SEASON}
        - SUBSCRIPTION_ACADEMIC_YEAR=${SUBSCRIPTION_ACADEMIC_YEAR}
        - SUBSCRIPTION_YEAR=${SUBSCRIPTION_YEAR}
        - DISCOUNT=${DISCOUNT}
    depends_on:
      - db
    restart: unless-stopped
    env_file: .env
    volumes:
      - ../data/load:/data/load
      - ../scripts:/scripts
      # NOTE: To provide files
      - type: bind
        source: ../data/logs/api.err
        target: /app.err
      - type: bind
        source: ../data/logs/api.log
        target: /app.log
      # To reserve data from the inside
      - ../api/api:/api
    deploy:
      mode: replicated
      replicas: 3
    #  placement:
    #    max_replicas_per_node: 1
      resources:
        limits:
          cpus: "0.50"
          memory: 500M
        reservations:
          cpus: "0.15"
          memory: 200M
    command: uvicorn app:app --host 0.0.0.0 --port 5000 --proxy-headers

  tg:
    image: web/tg
    build:
      dockerfile: ../docker/tg/Dockerfile
      context: ../tg
      args:
        - PROTOCOL=${PROTOCOL}
        - HOST=${EXTERNAL_HOST}
        - TG_TOKEN=${TG_TOKEN}
        - MODE=${MODE}
        - BUG_CHAT=${BUG_CHAT}
    env_file: .env
    volumes:
      - type: bind
        source: ../data/logs/tg.err
        target: /app.err
      - type: bind
        source: ../data/logs/tg.log
        target: /app.log
    depends_on:
      - api
    restart: unless-stopped

  server:
    image: web/server
    build:
      dockerfile: ../docker/web/Dockerfile.prod
      context: ../web
      args:
        - PROTOCOL=${PROTOCOL}
        - HOST=${EXTERNAL_HOST}
        - LOCALE=${LOCALE}
        - TIMEZONE=${TIMEZONE}
        - NAME=${NAME}
        - MAIL=${EMAIL}
        - PHONE=${PHONE}
        - SOCIAL=${SOCIAL}
        - GOOGLE_MAP_KEY=${GOOGLE_MAP_KEY}
        - GOOGLE_MAP_LAT=${GOOGLE_MAP_LAT}
        - GOOGLE_MAP_LNG=${GOOGLE_MAP_LNG}
        - GOOGLE_MAP_ZOOM=${GOOGLE_MAP_ZOOM}
        - SUBSCRIPTION_DAY=${SUBSCRIPTION_DAY}
        - SUBSCRIPTION_WEEK=${SUBSCRIPTION_WEEK}
        - SUBSCRIPTION_MONTH=${SUBSCRIPTION_MONTH}
        - SUBSCRIPTION_SEASON=${SUBSCRIPTION_SEASON}
        - SUBSCRIPTION_ACADEMIC_YEAR=${SUBSCRIPTION_ACADEMIC_YEAR}
        - SUBSCRIPTION_YEAR=${SUBSCRIPTION_YEAR}
        - DISCOUNT=${DISCOUNT}
    restart: unless-stopped
    env_file: .env
    volumes:
      - ../docker/server/nginx.metrics.conf:/etc/nginx/nginx.conf.template
      - ../data/load:/load
      - ../data/logs:/data/logs
    depends_on:
      - api
      - tg
      - prometheus
      - grafana
      - cadvisor
    ports:
      - "8010:80"
    command: /bin/sh -c "envsubst '$${EXTERNAL_HOST}'< /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf && nginx -g \"daemon off;\""
