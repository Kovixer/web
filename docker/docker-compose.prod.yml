version: "3.9"
services:
  db:
    image: mongo:5.0.5
    # ports:
    #   - "27017:27017"
    restart: unless-stopped
    env_file: .env
    environment:
      MONGO_INITDB_DATABASE: admin
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_LOGIN}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - ../data/db:/data/db
      - ../data/logs:/data/logs
    #   - ../docker/db/mongod.conf:/etc/mongod.conf
    # command: --config /etc/mongod.conf

  api:
    image: ${PROJECT_NAME}/api
    build:
      dockerfile: ../docker/api/Dockerfile
      context: ../api
      args:
        - PROJECT_NAME=${PROJECT_NAME}
        - PROTOCOL=${PROTOCOL}
        - HOST=${EXTERNAL_HOST}
        - MODE=${MODE}
        - SIDE_OPTIMIZED=${SIDE_OPTIMIZED}
        - LOCALE=${LOCALE}
        - TIMEZONE=${TIMEZONE}
        - MONGO_LOGIN=${MONGO_LOGIN}
        - MONGO_PASSWORD=${MONGO_PASSWORD}
        - YOOKASSA_ID=${YOOKASSA_ID}
        - YOOKASSA_KEY=${YOOKASSA_KEY}
        - GOOGLE_ID=${GOOGLE_ID}
        - GOOGLE_SECRET=${GOOGLE_SECRET}
        - TG_TOKEN=${TG_TOKEN}
        - TG_BOT=${TG_BOT}
        - BUG_CHAT=${BUG_CHAT}
        - SMSC_LOGIN=${SMSC_LOGIN}
        - SMSC_PASSWORD=${SMSC_PASSWORD}
        - VK_ID=${VK_ID}
        - VK_SECRET=${VK_SECRET}
        - SUBSCRIPTION_DAY=${SUBSCRIPTION_DAY}
        - SUBSCRIPTION_WEEK=${SUBSCRIPTION_WEEK}
        - SUBSCRIPTION_MONTH=${SUBSCRIPTION_MONTH}
        - SUBSCRIPTION_SEASON=${SUBSCRIPTION_SEASON}
        - SUBSCRIPTION_ACADEMIC_YEAR=${SUBSCRIPTION_ACADEMIC_YEAR}
        - SUBSCRIPTION_YEAR=${SUBSCRIPTION_YEAR}
        - DISCOUNT=${DISCOUNT}
        - AMAZON_ACCESS_ID=${AMAZON_ACCESS_ID}
        - AMAZON_ACCESS_KEY=${AMAZON_ACCESS_KEY}
        - AMAZON_BUCKET_NAME=${AMAZON_BUCKET_NAME}
        - AMAZON_DIR_NAME=${AMAZON_DIR_NAME}
        - AMAZON_REGION=${AMAZON_REGION}
    depends_on:
      - db
    restart: unless-stopped
    env_file: .env
    volumes:
      - ../data/load:/data/load
      - ../data/backup:/backup
      - ../scripts:/scripts
      # NOTE: To provide files
      - type: bind
        source: ../data/logs/api.err
        target: /app.err
      - type: bind
        source: ../data/logs/api.log
        target: /app.log
    command: uvicorn app:app --host 0.0.0.0 --port 5000 --proxy-headers

  jobs:
    image: ${PROJECT_NAME}/jobs
    build:
      dockerfile: ../docker/api/Dockerfile
      context: ../api
      args:
        - PROJECT_NAME=${PROJECT_NAME}
        - PROTOCOL=${PROTOCOL}
        - HOST=${EXTERNAL_HOST}
        - MODE=${MODE}
        - SIDE_OPTIMIZED=${SIDE_OPTIMIZED}
        - LOCALE=${LOCALE}
        - TIMEZONE=${TIMEZONE}
        - MONGO_LOGIN=${MONGO_LOGIN}
        - MONGO_PASSWORD=${MONGO_PASSWORD}
        - YOOKASSA_ID=${YOOKASSA_ID}
        - YOOKASSA_KEY=${YOOKASSA_KEY}
        - GOOGLE_ID=${GOOGLE_ID}
        - GOOGLE_SECRET=${GOOGLE_SECRET}
        - TG_TOKEN=${TG_TOKEN}
        - TG_BOT=${TG_BOT}
        - BUG_CHAT=${BUG_CHAT}
        - SMSC_LOGIN=${SMSC_LOGIN}
        - SMSC_PASSWORD=${SMSC_PASSWORD}
        - VK_ID=${VK_ID}
        - VK_SECRET=${VK_SECRET}
        - SUBSCRIPTION_DAY=${SUBSCRIPTION_DAY}
        - SUBSCRIPTION_WEEK=${SUBSCRIPTION_WEEK}
        - SUBSCRIPTION_MONTH=${SUBSCRIPTION_MONTH}
        - SUBSCRIPTION_SEASON=${SUBSCRIPTION_SEASON}
        - SUBSCRIPTION_ACADEMIC_YEAR=${SUBSCRIPTION_ACADEMIC_YEAR}
        - SUBSCRIPTION_YEAR=${SUBSCRIPTION_YEAR}
        - DISCOUNT=${DISCOUNT}
        - AMAZON_ACCESS_ID=${AMAZON_ACCESS_ID}
        - AMAZON_ACCESS_KEY=${AMAZON_ACCESS_KEY}
        - AMAZON_BUCKET_NAME=${AMAZON_BUCKET_NAME}
        - AMAZON_DIR_NAME=${AMAZON_DIR_NAME}
        - AMAZON_REGION=${AMAZON_REGION}
    depends_on:
      - db
    restart: unless-stopped
    env_file: .env
    volumes:
      # NOTE: To provide files
      - type: bind
        source: ../data/logs/jobs.err
        target: /app.err
      - type: bind
        source: ../data/logs/jobs.log
        target: /app.log
    command: uvicorn jobs:app --host 0.0.0.0 --port 5000 --proxy-headers

  tg:
    image: ${PROJECT_NAME}/tg
    build:
      dockerfile: ../docker/tg/Dockerfile
      context: ../tg
      args:
        - PROTOCOL=${PROTOCOL}
        - HOST=${EXTERNAL_HOST}
        - TG_TOKEN=${TG_TOKEN}
        - TG_BOT=${TG_BOT}
        - MODE=${MODE}
        - BUG_CHAT=${BUG_CHAT}
        - AMAZON_ACCESS_ID=${AMAZON_ACCESS_ID}
        - AMAZON_ACCESS_KEY=${AMAZON_ACCESS_KEY}
        - AMAZON_BUCKET_NAME=${AMAZON_BUCKET_NAME}
        - AMAZON_DIR_NAME=${AMAZON_DIR_NAME}
        - AMAZON_REGION=${AMAZON_REGION}
    env_file: .env
    volumes:
      - type: bind
        source: ../data/logs/tg.err
        target: /app.err
      - type: bind
        source: ../data/logs/tg.log
        target: /app.log
    depends_on:
      - api
    restart: unless-stopped

  server:
    image: ${PROJECT_NAME}/server
    build:
      dockerfile: ../docker/web/Dockerfile.prod
      context: ../web
      args:
        - PROTOCOL=${PROTOCOL}
        - HOST=${EXTERNAL_HOST}
        - LOCALE=${LOCALE}
        - TIMEZONE=${TIMEZONE}
        - NAME=${NAME}
        - MAIL=${EMAIL}
        - PHONE=${PHONE}
        - SOCIAL=${SOCIAL}
        - TG_BOT=${TG_BOT}
        - GOOGLE_MAP_KEY=${GOOGLE_MAP_KEY}
        - GOOGLE_MAP_LAT=${GOOGLE_MAP_LAT}
        - GOOGLE_MAP_LNG=${GOOGLE_MAP_LNG}
        - GOOGLE_MAP_ZOOM=${GOOGLE_MAP_ZOOM}
        - SUBSCRIPTION_DAY=${SUBSCRIPTION_DAY}
        - SUBSCRIPTION_WEEK=${SUBSCRIPTION_WEEK}
        - SUBSCRIPTION_MONTH=${SUBSCRIPTION_MONTH}
        - SUBSCRIPTION_SEASON=${SUBSCRIPTION_SEASON}
        - SUBSCRIPTION_ACADEMIC_YEAR=${SUBSCRIPTION_ACADEMIC_YEAR}
        - SUBSCRIPTION_YEAR=${SUBSCRIPTION_YEAR}
        - AMAZON_ACCESS_ID=${AMAZON_ACCESS_ID}
        - AMAZON_ACCESS_KEY=${AMAZON_ACCESS_KEY}
        - AMAZON_BUCKET_NAME=${AMAZON_BUCKET_NAME}
        - AMAZON_DIR_NAME=${AMAZON_DIR_NAME}
        - AMAZON_REGION=${AMAZON_REGION}
        - DISCOUNT=${DISCOUNT}
    restart: unless-stopped
    env_file: .env
    volumes:
      - ../docker/server/nginx.prod.conf:/etc/nginx/nginx.conf.template
      - ../data/load:/load
      - ../data/logs:/data/logs
    depends_on:
      - api
      - jobs
      - tg
    ports:
      - "${EXTERNAL_PORT}:80"
    command: /bin/sh -c "envsubst '$${EXTERNAL_HOST}'< /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf && nginx -g \"daemon off;\""
